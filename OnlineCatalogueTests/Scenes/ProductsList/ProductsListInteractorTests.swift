//
//  ProductsListInteractorTests.swift
//  OnlineCatalogue
//
//  Created by Aleksandr Pronin on 12/6/16.
//  Copyright (c) 2016 Aleksandr Pronin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import OnlineCatalogue
import XCTest

class ProductsListInteractorTests: XCTestCase
{
    // MARK: - Subject under test
    
    var sut: ProductsListInteractor!
    
    // MARK: - Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupProductsListInteractor()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupProductsListInteractor()
    {
        sut = ProductsListInteractor()
    }
    
    // MARK: - Test doubles
    
    class ProductsListInteractorOutputSpy: ProductsListInteractorOutput {
        
        // MARK: Method call expectations
        var presentStoredProductsCalled = false
        
        // MARK: Spied methods
        func presentStoredProducts(response: ProductsList.FetchStoredProducts.Response)
        {
            presentStoredProductsCalled = true
        }
    }
    
    class ProductsWorkerSpy: ProductsWorker
    {
        // MARK: Method call expectations
        var fetchStoredProductsCalled = false
        
        // MARK: Spied methods
        override func fetchStoredProducts(_ completionHandler: @escaping (_ products: [Product]) -> Void)
        {
            fetchStoredProductsCalled = true
            completionHandler([])
        }
    }
    
    // MARK: - Tests
    
    func testFetchProductsShouldAskProductsWorkerToFetchProductsAndPresenterToFormatResult()
    {
        // Given
        let productsListInteractorOutputSpy = ProductsListInteractorOutputSpy()
        sut.output = productsListInteractorOutputSpy
        let productsWorkerSpy = ProductsWorkerSpy(productsStore: ProductsMemStore())
        sut.productsWorker = productsWorkerSpy
        
        // When
        let request = ProductsList.FetchStoredProducts.Request()
        sut.fetchStoredProducts(request: request)
        
        // Then
        XCTAssert(productsWorkerSpy.fetchStoredProductsCalled, "fetchStoredProducts() should ask ProductsWorker to fetch stored products")
        XCTAssert(productsListInteractorOutputSpy.presentStoredProductsCalled, "fetchStoredProducts() should ask presenter to format products result")
    }
}
