//
//  ProductDetailsInteractor.swift
//  OnlineCatalogue
//
//  Created by Aleksandr Pronin on 12/6/16.
//  Copyright (c) 2016 Aleksandr Pronin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ProductDetailsInteractorInput
{
    func getProduct(_ request: ProductDetails.GetProduct.Request)
    var product: Product! { get set }
    var storedProductOnly: Bool { get set }
}

protocol ProductDetailsInteractorOutput
{
    func presentProduct(_ response: ProductDetails.GetProduct.Response)
}

class ProductDetailsInteractor: ProductDetailsInteractorInput
{
    var output: ProductDetailsInteractorOutput!
    var worker: ProductDetailsWorker!
    var product: Product!
    var storedProductOnly: Bool = false
    
    var productsAPIWorker = ProductsWorker(productsStore: ProductsAPI())
    var productsCoreDataWorker = ProductsWorker(productsStore: ProductsCoreDataStore())
    
    // MARK: - Business logic
    
    func getProduct(_ request: ProductDetails.GetProduct.Request)
    {
        var productsWorker: ProductsWorker
        if storedProductOnly {
            productsWorker = productsCoreDataWorker
        } else {
            productsWorker = productsAPIWorker
        }
        if let currentProduct = product {
            productsWorker.fetchProduct(currentProduct.id) {(fetchedProduct, error) -> Void in
                if let fetchedProduct = fetchedProduct {
                    self.product = fetchedProduct
                    self.productsCoreDataWorker.storeProduct(self.product) { error in
                        let response = ProductDetails.GetProduct.Response(product: self.product)
                        self.output.presentProduct(response)
                    }
                    
                }
            }
        }
    }
}
