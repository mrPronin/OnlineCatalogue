//
//  ProductsListPresenter.swift
//  OnlineCatalogue
//
//  Created by Aleksandr Pronin on 12/6/16.
//  Copyright (c) 2016 Aleksandr Pronin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ProductsListPresenterInput
{
    func presentStoredProducts(response: ProductsList.FetchStoredProducts.Response)
}

protocol ProductsListPresenterOutput: class
{
    func displayFetchedStoredOrders(viewModel: ProductsList.FetchStoredProducts.ViewModel)
}

class ProductsListPresenter: ProductsListPresenterInput
{
    weak var output: ProductsListPresenterOutput!
    let currencyFormatter: NumberFormatter = {
        let currencyFormatter = NumberFormatter()
        currencyFormatter.numberStyle = .currency
        return currencyFormatter
    }()
    // MARK: - Presentation logic
    
    func presentStoredProducts(response: ProductsList.FetchStoredProducts.Response)
    {
        var displayedProducts: [ProductsList.FetchStoredProducts.ViewModel.DispayedProduct] = []
        for product in response.products {
            let price = currencyFormatter.string(from: product.price!)
            let displayedProduct = ProductsList.FetchStoredProducts.ViewModel.DispayedProduct(id: product.id!, site_id: product.site_id!, title: product.title!, price: price!, currency_id: product.currency_id!, thumbnailURLString: product.thumbnail!)
            displayedProducts.append(displayedProduct)
        }
        let viewModel = ProductsList.FetchStoredProducts.ViewModel(displayedProducts: displayedProducts)
        output.displayFetchedStoredOrders(viewModel: viewModel)
    }
}
